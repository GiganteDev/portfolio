////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

                                                                                    
////////////////          S T R A I G H  B A R  C O U N T E R           ////////////////
                                                                                    

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////


// Author           : Gabriel Gigante
// Commit Date      : 2023-05-08
// Last Change Date : 2023-05-10
// Content          : Main Straightener Bar Counter, Miscellaneous Functions.


////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////




////////////////////////////            LOGIC             //////////////////////////////




////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

TYPE UDT3
TITLE   = 'Bars Information Used BY FB200'
NAME    : 'BARS_INF'
VERSION : 1.1
AUTHOR  : 'GIGANTE'
FAMILY  : 'GIGANTE'

    STRUCT
        Bar_No     : STRING[24] ;    // Bar ID
        Bar_Length : REAL := 0.0;    // Bar Length
        Bar_Width  : REAL := 0.0;    // Bar Width  
        Bar_Weight : REAL := 0.0;    // Bar Weight
        Bar_Count  : INT  := 0  ;    // Bar Count
        Bar_Hpos   : REAL := 0.0;    // Bar Hpos
        Bar_Time   : DINT := L#0;    // Bar Charging Time
    END_STRUCT
    
END_TYPE

  
FUNCTION_BLOCK FB200
TITLE   = 'Straightener bar counter'
NAME    : 'CNT_BAR'
VERSION : 1.1 
AUTHOR  : 'GIGANTE'
FAMILY  : 'GIGANTE'

VAR
    Data                  : ARRAY[1..320] OF UDT3;
    Empty_Buff            : UDT3                 ;
    
    Year                  : INT                  ;
    Month                 : INT                  ;
    Day                   : INT                  ;
    Hour                  : INT                  ;
    Minute                : INT                  ;
    Second                : INT                  ;
    
    Sys_Time              : DATE_AND_TIME        ; 
    Ret_Int               : INT                  ;
    Time_Buff AT sys_time : ARRAY [1..8] OF BYTE ; 
    Time_Int              : ARRAY [1..8] OF INT  ;
    Time_Dint             : DINT                 ;
END_VAR

VAR_INPUT   
    CUT       : BOOL;    // Barra cortada na tesoura
    SUB_BIT   : BOOL;    // Bit SUB para subtrair da contagem
    LENGH     : REAL;    // Tamanho em metros
    SPEED     : REAL;    // Velocidade em m/s
    SUB_VALUE : REAL;    // Valor para subtrair da contagem
    BITOLA    : REAL;    // Bitola do Material
    TAMANHO   : REAL;    // Tamanho do Material
    M_LINEAR  : REAL;    // Massa Linear
END_VAR

VAR_TEMP
    Loop1 : INT;
END_VAR

VAR_OUTPUT  
    OUT : INT ;    // Barra no cocho
    ACT : REAL;    // Barras nas correntes
END_VAR

// Begin Function
BEGIN

    // Read actual time
    Ret_Int := READ_CLK( CDT := Sys_Time );    // Sys block call, get date and time 

    // Time format convert  
    FOR Loop1:= 1 TO 8 BY 1 DO      
        Time_Int[Loop1] := BCD_TO_INT( Time_Buff[Loop1] );
    END_FOR;
    Time_Dint := Time_Int[6] +
                 Time_Int[5] * 100 +
                 INT_TO_DINT( Time_Int[4] ) * 10000 +
                 INT_TO_DINT( Time_Int[3] ) * 1000000 + 
                 INT_TO_DINT( Time_Int[2] ) * 100000000;
    
    Year   := Time_Int[0];
    Month  := Time_Int[1];
    Day    := Time_Int[2];
    Hour   := Time_Int[3];
    Minute := Time_Int[4];
    Second := Time_Int[5];
     
    // Empty Buff
    Empty_Buff.Bar_Length := 0.0;    // Bar Length
    Empty_Buff.Bar_Width  := 0.0;    // Bar Width  
    Empty_Buff.Bar_Weight := 0.0;    // Bar Weight
    Empty_Buff.Bar_Count  := 0  ;    // Bar Count
    Empty_Buff.Bar_Hpos   := 0.0;    // Bar Hpos
    Empty_Buff.Bar_Time   := L#0;    // Bar Charging Time
    
    // If machine made a new bar
    IF CUT AND NOT auxCUT THEN
        // Search for a clear pos
        FOR Loop1 := 1 TO 320 BY 1 DO
            // Record a new bar in counter DB
            IF Data[Loop1] = Empty_Buff THEN
                Data[Loop1].Bar_Length := TAMANHO           ;    // Bar Length
                Data[Loop1].Bar_Width  := BITOLA            ;    // Bar Width  
                Data[Loop1].Bar_Weight := TAMANHO * M_LINEAR;    // Bar Weight
                Data[Loop1].Bar_Count  := 0                 ;    // Bar Count
                Data[Loop1].Bar_Hpos   := 0.0               ;    // Bar Hpos
                Data[Loop1].Bar_Time   := L#0               ;    // Bar Charging Time
                EXIT;
        END_FOR;
        auxCUT := TRUE;
    END_IF;
    IF NOT CUT THEN
        auxCUT := FALSE;
    END_IF

// End Function
END_FUNCTION_BLOCK


////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////
